# Nginx configuration for WebQuiz Tunnel Server
# This configuration proxies requests to Unix domain sockets

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    listen 80;
    listen [::]:80;
    server_name webquiz.space;

    # Redirect HTTP to HTTPS (will be configured after Let's Encrypt setup)
    # Uncomment after running certbot:
    # return 301 https://$host$request_uri;

    # Temporary location for Let's Encrypt challenges
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # Proxy to Unix sockets - pattern: /wsaio/{socket_name}/path or /wsaio/{socket_name}
    location ~ ^/wsaio/([^/]+)/?(.*)$ {
        set $socket_name $1;
        set $socket_path $2;

        proxy_pass http://unix:{{ tunnel_socket_dir }}/$socket_name:/$socket_path$is_args$args;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Increased timeouts for long-lived connections
        proxy_connect_timeout {{ nginx_proxy_timeout }}s;
        proxy_send_timeout {{ nginx_websocket_timeout }}s;
        proxy_read_timeout {{ nginx_websocket_timeout }}s;
        
        # Buffering settings for WebSocket
        proxy_buffering off;
        proxy_cache off;
        
        # Keep-alive
        proxy_socket_keepalive on;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }

    # Tunnel configuration file
    location = /tunnel_config.yaml {
        root /var/www/html;
        add_header Content-Type application/x-yaml;
        add_header Access-Control-Allow-Origin *;
    }
}

